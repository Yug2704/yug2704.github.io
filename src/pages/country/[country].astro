---
import BaseLayout from "../../layouts/BaseLayout.astro";
import KpiCard from "../../components/KpiCard.astro";

/* 1) ROUTES STATIQUES ‚Äî tout est d√©clar√© DANS la fonction */
export function getStaticPaths() {
  const files = import.meta.glob("../../data/countries/*.json", { eager: true });
  const ALL = Object.values(files).map((m) => m.default ?? m);

  return ALL.map((c) => ({
    params: { country: c.slug },
    props: { country: c },
  }));
}

/* 2) DONN√âES DE PAGE ‚Äî on red√©clare un files ici (scope diff√©rent) */
const filesPage = import.meta.glob("../../data/countries/*.json", { eager: true });
const ALL_PAGE = Object.values(filesPage).map((m) => m.default ?? m);

const { country } = Astro.props;
const FR = ALL_PAGE.find((c) => c.slug === "france");
const isFrance = country.slug === "france";

/* Helpers */
function eur(n){ return Number(n).toLocaleString("fr-FR",{style:"currency",currency:"EUR"}); }
function diffLabel(val, ref){
  if (isFrance) return { text: "r√©f√©rence France", color: "var(--muted)" };
  const pct = ((val - ref)/ref)*100, abs = Math.abs(pct);
  if (!isFinite(pct)) return { text: "‚Äî", color: "var(--muted)" };
  if (abs < 1) return { text: "similaire", color: "var(--muted)" };
  return pct < 0 ? { text: `${abs.toFixed(0)}% moins cher`, color: "var(--green)" }
                 : { text: `${abs.toFixed(0)}% plus cher`,  color: "var(--red)" };
}

/* KPI √† afficher */
const KPIS = [
  { key:"restaurant",   label:"Repas au restaurant",                     icon:"üçΩÔ∏è", fmt:eur },
  { key:"salaireNet",   label:"Salaire mensuel net moyen",               icon:"üí∞",  fmt:eur },
  { key:"loyer",        label:"Loyer mensuel (1 chambre, centre-ville)", icon:"üè†",  fmt:eur },
  { key:"essence",      label:"Essence (1 L)",                            icon:"‚õΩ",  fmt:eur },
  { key:"cinema",       label:"Cin√©ma (1 place)",                         icon:"üé¨",  fmt:eur },
  { key:"hotel",        label:"H√¥tel (1 nuit)",                           icon:"üõéÔ∏è", fmt:eur },
  { key:"habiterIndex", label:"Indice ‚ÄúHabiter‚Äù",                         icon:"üè°",  fmt:(n)=>String(n) },
];

/* map clef KPI -> slug cat√©gorie */
function keyToCategorySlug(key){
  if (key === "salaireNet")   return "salaire";
  if (key === "habiterIndex") return "habiter";
  return key; // restaurant, loyer, essence, cinema, hotel
}

/* Titre + banni√®re */
const title = isFrance
  ? "Prix de la vie en France (r√©f√©rence)"
  : `Prix de la vie en ${country.name} (compar√© √† la France)`;
const bannerSrc  = country.banner     || `/banners/${country.slug}.jpg`;
const aboutTitle = country.aboutTitle || `√Ä savoir sur ${country.name}`;
---
<BaseLayout title={title}>
  <style>
    :root{ --red:#e03131; --green:#2f9e44; }
    .kpi-title{display:flex;gap:.4rem;align-items:center}
  </style>

  <!-- Banni√®re -->
  <div class="banner" style="margin:18px 0;border:1px solid var(--line);border-radius:18px;overflow:hidden;box-shadow:var(--shadow);">
    <img src={bannerSrc} alt={`Banni√®re ${country.name}`} style="width:100%;height:220px;object-fit:cover;" />
  </div>

  <!-- Intro -->
  <div class="card" style="background:var(--accent-100);margin-top:20px;">
    <h1 style="margin:0 0 10px 0;font-size:1.8rem;">
      {country.name} {isFrance ? "üá´üá∑ ‚Äî R√©f√©rence" : "‚Äî Compar√© √† la France"}
    </h1>
    <p style="color:var(--muted);font-size:1.05rem;line-height:1.6;margin:0;">
      {isFrance
        ? "Cette page pr√©sente les valeurs de r√©f√©rence utilis√©es pour comparer les autres pays."
        : "Aper√ßu des co√ªts moyens avec comparaison directe √† la r√©f√©rence France. Les valeurs peuvent varier selon la ville."}
    </p>
  </div>

  <!-- Chiffres cl√©s encadr√©s -->
  <h2 style="margin-top:26px;">Chiffres cl√©s {isFrance ? "(r√©f√©rence France)" : "(vs France)"}</h2>
  <div style="background:var(--accent-100);border:1px solid #ffd0df;border-radius:18px;padding:24px;margin-top:14px;box-shadow:var(--shadow);">
    <div class="grid">
      {KPIS.map((k) => {
        const val   = country.kpis[k.key];
        const ref   = FR.kpis[k.key];
        const diff  = diffLabel(val, ref);
        const value = k.fmt ? k.fmt(val) : String(val);
        const frVal = k.key === "habiterIndex" ? "France = 100" : (k.fmt ? k.fmt(ref) : String(ref));
        const diffHtml = isFrance ? null : `<strong style="color:${diff.color}">${diff.text}</strong>`;
        const categorySlug = keyToCategorySlug(k.key);
        return (
          <KpiCard
            icon={k.icon}
            label={k.label}
            value={value}
            frValue={frVal}
            diffHtml={diffHtml}
            countrySlug={country.slug}
            categorySlug={categorySlug}
          />
        );
      })}
    </div>
  </div>

  <!-- √Ä propos -->
  <h2 style="margin-top:26px;">{aboutTitle}</h2>
  <div class="card" style="margin-top:10px;">
    {country.notes?.map((p, i) => (
      <p style={`color:var(--muted);line-height:1.7;${i===0?"margin-top:0;":""}${i===country.notes.length-1?"margin-bottom:0;":""}`}>{p}</p>
    ))}
  </div>
</BaseLayout>
