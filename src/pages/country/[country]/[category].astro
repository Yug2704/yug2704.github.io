---
import BaseLayout from "../../../layouts/BaseLayout.astro";

/* 1) Charger tous les JSON pays (depuis src/data/countries) */
const countryFiles = import.meta.glob("../../../data/countries/*.json", { eager: true }) as Record<string, any>;

/* 2) Liste des catégories */
import cats from "../../../data/categories.json";

/* 3) Slug catégorie -> clé dans les JSON kpis */
const keyByCategory: Record<string, string> = {
  restaurant: "restaurant",
  salaire: "salaireNet",
  loyer: "loyer",
  essence: "essence",
  cinema: "cinema",
  hotel: "hotel",
  habiter: "habiterIndex",
};

/* 4) Routes statiques – toutes les combinaisons pays × catégorie existantes */
export function getStaticPaths() {
  // ⚠️ bien en MAJUSCULES partout
  const COUNTRIES = Object.values(countryFiles).map((m: any) => m.default ?? m);
  const FR = COUNTRIES.find((c: any) => c.slug === "france");

  const paths: any[] = [];
  for (const c of COUNTRIES) {
    for (const cat of cats) {
      const key = keyByCategory[cat];
      if (key && c.kpis && key in c.kpis) {
        paths.push({
          params: { country: c.slug, category: cat },
          props:  { country: c, category: cat, FR },
        });
      }
    }
  }
  return paths;
}

/* 5) Données de la page */
const { country, category, FR } = Astro.props as { country: any, category: string, FR: any };

const isFrance = country.slug === "france";
const key = keyByCategory[category];
const value = country.kpis[key];
const ref = FR.kpis[key];

/* Helpers affichage */
function eur(n?: number){
  return Number(n).toLocaleString("fr-FR",{ style:"currency", currency:"EUR" });
}

function diffLabel(val?: number, ref?: number){
  if (isFrance) return { text: "référence France", color: "var(--muted)" };
  const pct = ((val ?? ref!) - ref!)/ref!*100;
  const abs = Math.abs(pct);
  if (!isFinite(pct)) return { text: "–", color: "var(--muted)" };
  if (abs < 1) return { text: "similaire", color: "var(--muted)" };
  return pct < 0
    ? { text: `${abs.toFixed(0)}% moins cher`, color: "var(--green)" }
    : { text: `${abs.toFixed(0)}% plus cher`,  color: "var(--red)" };
}

/* Libellés */
const labelByCat: Record<string,string> = {
  restaurant: "Repas au restaurant",
  salaire: "Salaire mensuel net moyen",
  loyer: "Loyer mensuel (1 chambre, centre-ville)",
  essence: "Essence (L)",
  cinema: "Cinéma (1 place)",
  hotel: "Hôtel (1 nuit)",
  habiter: "Indice \"Habiter\"",
};
const label = labelByCat[category] ?? category;
---

<BaseLayout>
  <h1>{label} – {country.name}</h1>

  <div class="card">
    <div class="value">{eur(value)}</div>
    <div class="ref">
      {isFrance ? "Réf. France" : `Réf. France : ${eur(ref)}`}
      <span class="delta" style={`color:${diffLabel(value, ref).color}`}> — {diffLabel(value, ref).text}</span>
    </div>
  </div>

  <style>
    .card{background:#fff;border:1px solid #eee;border-radius:12px;padding:18px;box-shadow:0 4px 10px rgba(0,0,0,.04);max-width:680px}
    .value{font-size:42px;font-weight:700;margin-bottom:6px}
    .ref{color:var(--muted)}
    .delta{margin-left:6px}
  </style>
</BaseLayout>
