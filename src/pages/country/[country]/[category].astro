---
import BaseLayout from "../../../layouts/BaseLayout.astro";

/* 1) Charger tous les JSON pays (depuis src/data/countries) */
const countryFiles = import.meta.glob("../../../data/countries/*.json", { eager: true }) as Record<string, any>;

/* 2) Liste des catégories */
import cats from "../../../data/categories.json";

/* 3) Slug catégorie -> clé dans les JSON kpis */
const keyByCategory: Record<string, string> = {
  restaurant: "restaurant",
  salaire: "salaireNet",
  loyer: "loyer",
  essence: "essence",
  cinema: "cinema",
  hotel: "hotel",
  habiter: "habiterIndex",
};

/* 4) Routes statiques : toutes les combinaisons pays×cat existantes */
export function getStaticPaths() {
  const COUNTRIES = Object.values(countryFiles).map((m: any) => m.default ?? m);
  const FR = COUNTRIES.find((c: any) => c.slug === "france");

  const paths: any[] = [];
  for (const c of COUNTRIES) {
    for (const cat of cats) {
      const key = keyByCategory[cat];
      if (key && c.kpis && key in c.kpis) {
        paths.push({
          params: { country: c.slug, category: cat },
          props: { country: c, category: cat, FR },
        });
      }
    }
  }
  return paths;
}
---

/* 5) Données de la page */
const { country, category, FR } = Astro.props;
const isFrance = country.slug === "france";
const key  = keyByCategory[category];
const val  = country.kpis[key];
const ref  = FR.kpis[key];

/* Helpers */
function eur(n:number){ return Number(n).toLocaleString("fr-FR",{style:"currency",currency:"EUR"}); }
function diffLabel(val:number, ref:number){
  if (isFrance) return { text: "référence France", color: "var(--muted)" };
  const pct  = ((val - ref) / ref) * 100;
  const abs  = Math.abs(pct);
  if (!isFinite(pct)) return { text: "–",         color: "var(--muted)" };
  if (abs < 1)         return { text: "similaire", color: "var(--muted)" };
  return pct < 0
    ? { text: `${abs.toFixed(0)}% moins cher`, color: "var(--green)" }
    : { text: `${abs.toFixed(0)}% plus cher`,  color: "var(--red)"   };
}

/* Libellés d’affichage */
const labelByCat: Record<string,string> = {
  restaurant: "Repas au restaurant",
  salaire:    "Salaire mensuel net moyen",
  loyer:      "Loyer mensuel (1 chambre, centre-ville)",
  essence:    "Essence (1 L)",
  cinema:     "Cinéma (1 place)",
  hotel:      "Hôtel (1 nuit)",
  habiter:    "Indice “Habiter”",
};

/* Format valeur */
const fmt = key === "habiterIndex" ? (n:number)=>String(n) : eur;
const title = `${labelByCat[category]} — ${country.name}`;
---

<BaseLayout title={title}>
  <div class="card">
    <h1 style="margin:0 0 6px 0;">{labelByCat[category]} <span class="muted">({country.name})</span></h1>
    <p class="muted">
      {isFrance
        ? "Valeur de référence utilisée pour comparer les autres pays."
        : <>Par rapport à la France : <strong style={`color:${diffLabel(val,ref).color}`}>{diffLabel(val,ref).text}</strong></>}
    </p>

    <div class="value">{fmt(val)}</div>
    {isFrance
      ? <div class="ref muted">France = {key==="habiterIndex" ? String(ref) : fmt(ref)}</div>
      : <div class="ref muted">En France : {key==="habiterIndex" ? String(ref) : fmt(ref)}</div>}
  </div>

  <style>
    .muted{color:var(--muted)}
    .card{background:var(--accent-100);border:1px solid #ffd0df;border-radius:18px;padding:18px;box-shadow:var(--shadow)}
    .value{font-size:2rem;font-weight:700;color:var(--accent)}
    .ref{margin-top:8px}
  </style>
</BaseLayout>
