---
import BaseLayout from "../../../layouts/BaseLayout.astro";

/* 1Ô∏è‚É£ Charger les fichiers pays */
const countryFiles = import.meta.glob("../../../data/countries/*.json", { eager: true });
const COUNTRIES = Object.values(countryFiles).map((m: any) => m.default ?? m);
const FR = COUNTRIES.find((c: any) => c.slug === "france");

/* 2Ô∏è‚É£ Charger la liste des cat√©gories */
import cats from "../../../data/categories.json";

/* 3Ô∏è‚É£ Mapping slug cat√©gorie ‚Üí cl√© du JSON */
const keyByCategory: Record<string, string> = {
  restaurant: "restaurant",
  salaire: "salaireNet",
  loyer: "loyer",
  essence: "essence",
  cinema: "cinema",
  hotel: "hotel",
  habiter: "habiterIndex",
};

/* 4Ô∏è‚É£ G√©n√©rer toutes les routes statiques (pays √ó cat√©gorie) */
export function getStaticPaths() {
  const paths: any[] = [];
  for (const c of COUNTRIES) {
    for (const cat of cats) {
      const key = keyByCategory[cat];
      if (key && c.kpis && key in c.kpis) {
        paths.push({
          params: { country: c.slug, category: cat },
          props: { country: c, category: cat, FR },
        });
      }
    }
  }
  return paths;
}

/* 5Ô∏è‚É£ Donn√©es de la page */
const { country, category, FR: FRref } = Astro.props;
const isFrance = country.slug === "france";
const key = keyByCategory[category];
const val = country.kpis[key];
const ref = (FRref ?? FR).kpis[key];

/* 6Ô∏è‚É£ Fonctions utilitaires */
function eur(n: number) {
  return Number(n).toLocaleString("fr-FR", { style: "currency", currency: "EUR" });
}
function diffLabel(val: number, ref: number) {
  if (isFrance) return { text: "r√©f√©rence France", color: "var(--muted)" };
  const pct = ((val - ref) / ref) * 100;
  const abs = Math.abs(pct);
  if (!isFinite(pct)) return { text: "‚Äì", color: "var(--muted)" };
  if (abs < 1) return { text: "similaire", color: "var(--muted)" };
  return pct < 0
    ? { text: `${abs.toFixed(0)}% moins cher`, color: "var(--green)" }
    : { text: `${abs.toFixed(0)}% plus cher`, color: "var(--red)" };
}
const diff = diffLabel(val, ref);

/* 7Ô∏è‚É£ Titres et descriptions */
const titleMap: Record<string, string> = {
  restaurant: "Repas au restaurant",
  salaire: "Salaire net moyen",
  loyer: "Loyer (1 ch, centre-ville)",
  essence: "Essence (1 L)",
  cinema: "Cin√©ma (1 place)",
  hotel: "H√¥tel (1 nuit)",
  habiter: "Indice ‚ÄúHabiter‚Äù",
};
const pageTitle = `${titleMap[category]} ‚Äì ${country.name}`;
const pageDesc = isFrance
  ? `Valeur de r√©f√©rence France pour ${titleMap[category]}.`
  : `${titleMap[category]} en ${country.name}, compar√© √† la France.`;
---

<BaseLayout title={pageTitle} description={pageDesc}>
  <div
    class="banner"
    style="margin:18px 0;border:1px solid var(--line);border-radius:18px;overflow:hidden;box-shadow:var(--shadow);"
  >
    <img
      src={country.banner || `/banners/${country.slug}.jpg`}
      alt={`Banni√®re ${country.name}`}
      style="width:100%;height:220px;object-fit:cover;"
    />
  </div>

  <div class="card" style="background:var(--accent-100);margin-top:20px;">
    <h1 style="margin:0 0 10px 0;font-size:1.8rem;">
      {titleMap[category]} ‚Äî {country.name} {isFrance ? "üá´üá∑" : ""}
    </h1>
    <p style="color:var(--muted);font-size:1.05rem;line-height:1.6;margin:0;">
      {isFrance
        ? "Cette page pr√©sente la valeur de r√©f√©rence fran√ßaise utilis√©e pour comparer les autres pays."
        : <>Compar√© √† la France : <strong style={`color:${diff.color}`}>{diff.text}</strong>.</>}
    </p>
  </div>

  <div class="card" style="margin-top:14px;">
    <div style="font-size:1.8rem;font-weight:700;color:var(--accent)">
      {key === "habiterIndex" ? String(val) : eur(val)}
    </div>
    {!isFrance && (
      <div style="color:var(--muted);margin-top:6px">
        En France : {key === "habiterIndex" ? String(ref) : eur(ref)}
      </div>
    )}
  </div>

  <div style="margin-top:20px;display:flex;gap:8px;flex-wrap:wrap;">
    <a class="pill" href={`/country/${country.slug}`}>‚Üê Retour {country.name}</a>
    {cats.map((c) => (
      <a class="pill" href={`/country/${country.slug}/${c}`}>
        {c.charAt(0).toUpperCase() + c.slice(1)}
      </a>
    ))}
  </div>
</BaseLayout>
