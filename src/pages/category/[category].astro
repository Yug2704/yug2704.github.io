---
import BaseLayout from "../../layouts/BaseLayout.astro";

// On génère 7 pages: /category/restaurant, /category/salaire, /category/loyer, /category/essence, /category/cinema, /category/hotel, /category/habiter
const CATS = ["restaurant","salaire","loyer","essence","cinema","hotel","habiter"];

export function getStaticPaths() {
  return CATS.map(slug => ({ params: { category: slug } }));
}

const { category } = Astro.params;

// (optionnel) récupérer le ?country=... si présent
const country = Astro.url.searchParams.get("country") || null;

// charger les JSON pays (pour afficher les chiffres ici si tu veux)
const files = import.meta.glob("../../data/countries/*.json", { eager: true }) as Record<string, any>;
const ALL = Object.values(files).map((m:any) => m.default ?? m);

// trouves la France et le pays demandé
const FR = ALL.find((c:any) => c.slug === "france");
const C  = country ? ALL.find((c:any) => c.slug === country) : null;

// petit helper affichage
function eur(n:number){ return n.toLocaleString("fr-FR",{style:"currency",currency:"EUR"}); }
function fmt(cat:string, v:number){ return cat==="habiter" ? String(v) : eur(v); }

const title = country ? `Catégorie ${category} — ${country}` : `Catégorie ${category}`;
---
<BaseLayout title={title}>
  <div class="card" style="background:var(--accent-100);margin-top:20px;">
    <h1 style="margin:0 0 10px 0;font-size:1.6rem;">
      {category} {country && <>— {country}</>}
    </h1>
    <p style="color:var(--muted);margin:0;">
      Page catégorie. Tu peux afficher ici le prix pour le pays sélectionné,
      la comparaison vs France, puis (plus tard) un top des pays moins chers / plus chers.
    </p>
  </div>

  {country && C && (
    <div class="card" style="margin-top:14px;">
      <h3 style="margin-top:0">Prix pour {C.name}</h3>
      <p style="color:var(--muted);margin:0">
        {(() => {
          const key = category === "salaire" ? "salaireNet"
                   : category === "habiter" ? "habiterIndex" : category;
          const val = C.kpis[key];     // valeur pays
          const ref = FR.kpis[key];    // valeur France
          if (val == null || ref == null) return "Donnée indisponible.";
          const pct = ((val - ref)/ref)*100, abs = Math.abs(pct);
          const label = abs < 1 ? "similaire" : (pct < 0 ? `${abs.toFixed(0)}% moins cher` : `${abs.toFixed(0)}% plus cher`);
          const color = pct < 0 ? "var(--green)" : (pct > 0 ? "var(--red)" : "var(--muted)");
          return `Prix/indice: ${fmt(category, val)} — En France: ${fmt(category, ref)} → ${label}`;
        })()}
      </p>
    </div>
  )}
</BaseLayout>
